<?phpnamespace ZPIBundle\DataFixtures\ORM;use Doctrine\Common\DataFixtures\AbstractFixture;use Doctrine\Common\DataFixtures\OrderedFixtureInterface;use Doctrine\Common\Persistence\ObjectManager;use ZPIBundle\Entity\Question;use ZPIBundle\Entity\Answer;class LoadAnswerData extends AbstractFixture implements OrderedFixtureInterface{    /**     * {@inheritDoc}     */    public function load(ObjectManager $em)    {		$answers = array(			new Answer($this->getReference('question0'), 'The cat is under the table.', 'under table'),			new Answer($this->getReference('question0'), 'The cat lies on the floor.', 'on floor'),			new Answer($this->getReference('question1'), 'On the table there is a vase with flowers.', 'vase with flowers'),			new Answer($this->getReference('question1'), 'On the table there is a vase with flowers.', 'vase;flowers'),						new Answer($this->getReference('question2'), 'The pictures hang on the wall.', 'on wall'),						new Answer($this->getReference('question3'), 'It\'s under the bed.', 'under bed'),			new Answer($this->getReference('question3'), 'Crocodile is under the bed.', 'crocodile under bed'),			new Answer($this->getReference('question4'), 'There\'s a crocodile under the bed.', 'crocodile'),						new Answer($this->getReference('question5'), 'In the picture I can see a lamp.', 'lamp'),			new Answer($this->getReference('question5'), 'There is a lamp in the picture.', 'there lamp'),						new Answer($this->getReference('question6'), 'In the picture I can see a big city.', 'city'),			new Answer($this->getReference('question6'), 'In the picture I can see a skyscrapers.', 'skyscrapers'),			new Answer($this->getReference('question6'), 'In the picture I can see a high buildings.', 'buildings'),						new Answer($this->getReference('question7'), 'In the picture I can see a classroom.', 'classroom'),			new Answer($this->getReference('question7'), 'In the picture I can see many benches.', 'desks;benches'),			new Answer($this->getReference('question7'), 'In the picture I can see blackboard.', 'blackboard'),			new Answer($this->getReference('question8'), 'Blackboard hangs on a wall.', 'on wall'),			new Answer($this->getReference('question8'), 'Blackboard is behind benches.', 'behind desks;benches'),			new Answer($this->getReference('question9'), 'Benches are in front of blackboard.', 'in front of blackboard'),						new Answer($this->getReference('question10'), 'It\'s on a plate.', 'on plate'),			new Answer($this->getReference('question10'), 'It\'s near a cake.', 'near cake'),			new Answer($this->getReference('question10'), 'It\'s next to a cake.', 'next to cake'),			new Answer($this->getReference('question11'), 'It\'s a cake.', 'cake'),						new Answer($this->getReference('question12'), 'It\'s between the scissors and spoons.', 'between scissors;spoons and scissors;spoons'),			new Answer($this->getReference('question13'), 'Scissors are near the sticky tape.', 'near tape'),			new Answer($this->getReference('question13'), 'Scissors are on the left of the sticky tape.', 'on left of tape'),						new Answer($this->getReference('question14'), 'In the picture I can see zebras and giraffes.', 'zebras;giraffes zebras;giraffes'),						new Answer($this->getReference('question15'), 'The child is pointing a rabbit.', 'rabbit'),						new Answer($this->getReference('question16'), 'They are feeding the donkey.', 'feeding donkey'),						new Answer($this->getReference('question17'), 'He\'s under the tiger.', 'under tiger'),			new Answer($this->getReference('question17'), 'He lies on the grass.', 'on grass'),			new Answer($this->getReference('question18'), 'He\'s feeding a tiger.', 'tiger'),						new Answer($this->getReference('question19'), 'It\'s on the bath.', 'on bath'),						new Answer($this->getReference('question20'), 'In the foreground I can see a bridge.', 'bridge'),						new Answer($this->getReference('question21'), 'In the picture there is a banana.', 'banana'),						new Answer($this->getReference('question22'), 'In the picture there are pears.', 'pears'),						new Answer($this->getReference('question23'), 'They are reading books.', 'reading books'),			new Answer($this->getReference('question23'), 'They are sitting on a bench.', 'sitting on bench'),						new Answer($this->getReference('question24'), 'There is a squirrel.', 'squirrel'),						new Answer($this->getReference('question25'), 'There is a cat.', 'cat'),						new Answer($this->getReference('question26'), 'He is running.', 'running;run'),						new Answer($this->getReference('question27'), 'She is swimming.', 'swimming;swim'),						new Answer($this->getReference('question28'), 'They are dancing.', 'dancing;dance'),		);				foreach($answers as $answer) {			$em->persist($answer);		}				$em->flush();    }		    /**     * {@inheritDoc}     */    public function getOrder()    {        return 3; // the order in which fixtures will be loaded    }}